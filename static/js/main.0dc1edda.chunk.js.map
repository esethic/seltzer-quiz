{"version":3,"sources":["images/apricot.png","images/berry.png","images/coconut.png","images/hibiscus.png","images/keylime.png","images/lemon.png","images/lime.png","images/limoncello.png","images/mango.png","images/orange.png","images/pamplemousse.png","images/passionfruit.png","images/pasteque.png","images/peachpear.png","images/razzcranberry.png","images/tangerine.png","cans.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","images","id","src","apricot","description","ascore","matches","berry","coconut","hibiscus","keylime","lemon","lime","limoncello","mango","orange","pamplemousse","passionfruit","pasteque","peachpear","razzcranberry","tangerine","canArray","shuffle","array","i","length","j","Math","floor","random","temp","generateRound","arr","roundNum","qualified","filter","console","log","CanDisplay","flavor","this","props","selected","style","display","alt","React","Component","Comparison","state","round","cans","currentRound","firstCan","firstCanIndex","secondCan","secondCanIndex","winner","componentDidMount","bind","generateMatch","bracket","firstMatch","setState","can","index","nextRound","newBracket","nextMatch","pop","firstIndex","indexOf","shift","map","item","className","onClick","resolveFirstWin","resolveSecondWin","reset","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0dc1edda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apricot.1190ca39.png\";","module.exports = __webpack_public_path__ + \"static/media/berry.043a3adb.png\";","module.exports = __webpack_public_path__ + \"static/media/coconut.b0350065.png\";","module.exports = __webpack_public_path__ + \"static/media/hibiscus.5a48753b.png\";","module.exports = __webpack_public_path__ + \"static/media/keylime.3614a76d.png\";","module.exports = __webpack_public_path__ + \"static/media/lemon.c4c03831.png\";","module.exports = __webpack_public_path__ + \"static/media/lime.00766053.png\";","module.exports = __webpack_public_path__ + \"static/media/limoncello.def1bb95.png\";","module.exports = __webpack_public_path__ + \"static/media/mango.5762ee7f.png\";","module.exports = __webpack_public_path__ + \"static/media/orange.9aca6dc5.png\";","module.exports = __webpack_public_path__ + \"static/media/pamplemousse.47d2b149.png\";","module.exports = __webpack_public_path__ + \"static/media/passionfruit.4ebca782.png\";","module.exports = __webpack_public_path__ + \"static/media/pasteque.a3caaf28.png\";","module.exports = __webpack_public_path__ + \"static/media/peachpear.a0aa2f32.png\";","module.exports = __webpack_public_path__ + \"static/media/razzcranberry.ce46fb79.png\";","module.exports = __webpack_public_path__ + \"static/media/tangerine.87f40263.png\";","import apricot from './images/apricot.png';\nimport berry from './images/berry.png';\nimport coconut from './images/coconut.png';\nimport hibiscus from './images/hibiscus.png';\nimport keylime from './images/keylime.png';\nimport lemon from './images/lemon.png';\nimport lime from './images/lime.png';\nimport limoncello from './images/limoncello.png';\nimport mango from './images/mango.png';\nimport orange from './images/orange.png';\nimport pamplemousse from './images/pamplemousse.png';\nimport passionfruit from './images/passionfruit.png';\nimport pasteque from './images/pasteque.png';\nimport peachpear from './images/peachpear.png';\nimport razzcranberry from './images/razzcranberry.png';\nimport tangerine from './images/tangerine.png';\n\n\nconst images =[\n    { id: 1, src: apricot, description: 'apricot', ascore:0, matches: 0},\n    { id: 2, src: berry, description: 'berry', ascore:0, matches: 0},\n    { id: 3, src: coconut, description: 'coconut', ascore:0, matches: 0},\n    { id: 4, src: hibiscus, description: 'hibiscus', ascore:0, matches: 0},\n    { id: 5, src: keylime, description: 'key lime', ascore:0, matches: 0},\n    { id: 6, src: lemon, description: 'lemon', ascore: 0, matches: 0},\n    { id: 7, src: lime, description: 'lime', ascore: 0, matches: 0},\n    { id: 8, src: limoncello, description: 'limoncello', ascore: 0, matches: 0},\n    { id: 9, src: mango, description: 'mango', ascore: 0, matches: 0},\n    { id: 10, src: orange, description: 'orange', ascore: 0, matches: 0},\n    { id: 11, src: pamplemousse, description: 'pamplemousse', ascore: 0, matches: 0},\n    { id: 12, src: passionfruit, description: 'passionfruit', ascore: 0, matches: 0},\n    { id: 13, src: pasteque, description: 'pasteque', ascore: 0, matches: 0},\n    { id: 14, src: peachpear, description: 'peach-pear', ascore: 0, matches: 0},\n    { id: 15, src: razzcranberry, description: 'razz-cranberry', ascore: 0, matches: 0},\n    { id: 16, src: tangerine, description: 'tangerine', ascore: 0, matches: 0}\n]\n\nexport default images;","import React from 'react';\nimport images from './cans.js';\nimport './App.css';\n\n//arrays and functions\n\n//const flavors = [\"limoncello\", \"pasteque\", \"hibiscus\", \"keylime\", \"tangerine\", \"apricot\", \"mango\", \"passionfruit\", \"coconut\", \"pamplemousse\", \"peachpear\", \"berry\", \"razzcranberry\", \"orange\", \"lemon\", \"lime\"];\nlet canArray = [...images];\nconsole.log(canArray);\n\n\nfunction shuffle(array) {\n  for(let i = array.length - 1; i > 0; i--){\n    const j = Math.floor(Math.random() * i)\n    const temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n  return array;\n}\n\n//creates an array of all cans qualifying for the current round\nfunction generateRound(arr, roundNum) {\n  const qualified = arr.filter(arr => arr.ascore === roundNum);\n  shuffle(qualified);\n  return qualified;\n}\n\nshuffle(images);\n\n//components\n\nclass CanDisplay extends React.Component {\n  \n\n  render() {\n    const flavor = this.props.selected;\n    return(<div style={{display:'inline-block'}}>\n      <img src={flavor.src} alt={flavor.description}/>\n      <h2>{flavor.description}</h2>\n    </div>)\n  \n  }\n}\n\nclass Comparison extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      round: 0,\n      cans: canArray,\n      currentRound: '',\n      firstCan: '',\n      firstCanIndex: 0,\n      secondCan: '',\n      secondCanIndex: 0,\n      winner: ''\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.generateMatch = this.generateMatch.bind(this);\n  }\n\n  componentDidMount() {\n    let bracket = generateRound(this.state.cans, this.state.round);\n    const firstMatch = this.generateMatch(bracket);\n    this.setState({\n      currentRound:bracket,\n      firstCan: firstMatch[0].can,\n      firstCanIndex: firstMatch[0].index,\n      secondCan: firstMatch[1].can,\n      secondCanIndex: firstMatch[1].index\n    })\n  }\n\n  generateMatch(arr) {\n    if (arr.length === 0) {\n      const nextRound = this.state.round + 1;\n      let newBracket = generateRound(canArray, nextRound);\n      const nextMatch = this.generateMatch(newBracket);\n      this.setState({\n        round: nextRound,\n        currentRound: newBracket\n      })\n      return nextMatch;\n      \n    }\n    if (arr.length === 1) {\n      this.setState({winner:arr});\n      return this.state.winner;\n    }\n    if (arr.length >= 2) {\n      const firstCan = arr.pop();\n      const firstIndex = canArray.indexOf(firstCan);\n      const secondCan = arr.shift();\n      const secondIndex = canArray.indexOf(secondCan);\n      \n      const matchUp = [{can:firstCan, index:firstIndex},{can:secondCan, index:secondIndex}];\n  \n      return matchUp;\n    }\n  };\n\n  resolveFirstWin() {\n    canArray[this.state.firstCanIndex].ascore = canArray[this.state.firstCanIndex].ascore+1;\n    canArray[this.state.secondCanIndex].ascore = -1;\n    this.setState({\n      cans:canArray\n    });\n\n    const nextMatch = this.generateMatch(this.state.currentRound);\n\n\n    if (nextMatch.length === 2){\n    this.setState({\n      firstCan: nextMatch[0].can,\n      firstCanIndex: nextMatch[0].index,\n      secondCan: nextMatch[1].can,\n      secondCanIndex: nextMatch[1].index\n    });\n  }\n  }\n  \n\n  resolveSecondWin() {\n    canArray[this.state.firstCanIndex].ascore = -1;\n    canArray[this.state.secondCanIndex].ascore = canArray[this.state.secondCanIndex].ascore +1;\n    this.setState({\n      cans:canArray\n    });\n    const nextMatch = this.generateMatch(this.state.currentRound)\n\n    if (nextMatch.length === 2){\n    this.setState({\n      firstCan: nextMatch[0].can,\n      firstCanIndex: nextMatch[0].index,\n      secondCan: nextMatch[1].can,\n      secondCanIndex: nextMatch[1].index\n    });\n  }\n  }\n\n  reset() {\n    canArray.map(item => item.ascore =0);\n    let bracket = generateRound(canArray, 0);\n    const firstMatch = this.generateMatch(bracket);\n    this.setState({\n      round:0,\n      cans:canArray,\n      currentRound:bracket,\n      firstCan: firstMatch[0].can,\n      firstCanIndex: firstMatch[0].index,\n      secondCan: firstMatch[1].can,\n      secondCanIndex: firstMatch[1].index,\n      winner:''\n    })\n  }\n\n  render() {\n\n    if (this.state.winner === '') {return(\n      <div>\n        <h1 className='Title'>pick your favorite</h1>\n        <button className = 'Can-button' onClick={this.resolveFirstWin.bind(this)}><CanDisplay selected={this.state.firstCan} index = {this.state.firstCanIndex}/></button>\n        <button className = 'Can-button' onClick={this.resolveSecondWin.bind(this)}><CanDisplay selected={this.state.secondCan} index = {this.state.secondCanIndex}/></button>\n        <br/>\n        <button className='App-button' onClick={this.reset.bind(this)}>reset</button>\n      </div>\n    )} else {\n      return(\n        <div>\n          <h1 className='Title'>your favorite flavor:</h1>\n          <img src={this.state.winner[0].src} alt={this.state.winner[0].description}/>\n          <h2>{this.state.winner[0].description}</h2>\n          <br/>\n          <button className='App-button' onClick={this.reset.bind(this)}>reset</button> \n        </div>\n      )\n    }\n  \n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    <Comparison/>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}